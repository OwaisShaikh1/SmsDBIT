"""
Django settings for sms_portal project.

Generated by 'django-admin startproject' using Django 4.2.7.
Adapted for the SMS Portal project (Bootstrap HTML frontend + Django REST backend).
"""

from pathlib import Path
from datetime import timedelta
from decouple import config
from dotenv import load_dotenv

load_dotenv()

# Base
BASE_DIR = Path(__file__).resolve().parent.parent

# Security
SECRET_KEY = config('SECRET_KEY', default='django-insecure-dev-secret-change-me')
DEBUG = config('DEBUG', default=True, cast=bool)
ALLOWED_HOSTS = config('ALLOWED_HOSTS', default='localhost,127.0.0.1').split(',')

# Application definition
INSTALLED_APPS = [

    # Local apps
    'sms',
    # Django
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third party
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders',

    
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',                   # must be near top
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'sms_portal.middleware.Custom404ResponseMiddleware',       # custom 404 (keep if present)
]

ROOT_URLCONF = 'sms_portal.urls'

# Templates
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'frontend' / 'templates'
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'sms_portal.context_processors.api_settings',
            ],
        },
    },
]

WSGI_APPLICATION = 'sms_portal.wsgi.application'

# Database (default: sqlite for dev)
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'sms_portal',
        'USER': 'root',
        'PASSWORD': 'Omkar@16905',
        'HOST': 'localhost',
        'PORT': '3306',
        'OPTIONS': {
            'charset': 'utf8mb4',
            'init_command': "SET NAMES 'utf8mb4' COLLATE 'utf8mb4_unicode_ci';",
        },
    }
}


# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',},
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = config('TIME_ZONE', default='Asia/Kolkata')   # set to Asia/Kolkata per project
USE_I18N = True
USE_TZ = True

# Static & Media
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / 'frontend' / 'static',
]
# For collectstatic in production:
STATIC_ROOT = config('STATIC_ROOT', default=str(BASE_DIR / 'staticfiles'))

MEDIA_URL = '/media/'
MEDIA_ROOT = config('MEDIA_ROOT', default=str(BASE_DIR / 'media'))

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Custom user model
AUTH_USER_MODEL = 'sms.User'

# REST framework configuration
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication', 
    ),
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
    ],
    # Pagination (sensible default)
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': config('DRF_PAGE_SIZE', default=20, cast=int),
}

# JWT configuration
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=config('JWT_ACCESS_TOKEN_LIFETIME', default=60, cast=int)),
    'REFRESH_TOKEN_LIFETIME': timedelta(hours=config('JWT_REFRESH_TOKEN_LIFETIME', default=24, cast=int)),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': False,
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'AUTH_HEADER_TYPES': ('Bearer',),
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
}

# CORS / CSRF
# Default allowed origins (override in environment)
CORS_ALLOWED_ORIGINS = config('CORS_ALLOWED_ORIGINS', default='http://localhost:3000,http://localhost:5173').split(',')
CORS_ALLOW_CREDENTIALS = True

# Trusted origins for CSRF (useful when deploying)
_csrf_trusted = config('CSRF_TRUSTED_ORIGINS', default='').strip()
if _csrf_trusted:
    CSRF_TRUSTED_ORIGINS = [u.strip() for u in _csrf_trusted.split(',')]
else:
    CSRF_TRUSTED_ORIGINS = []

# MySMSMantra / provider config (use env vars)
MYSMSMANTRA_CONFIG = {
    'API_URL': config('MYSMSMANTRA_API_URL', default='https://api.mylogin.co.in/api/v2/SendSMS'),
    'API_KEY': config('MYSMSMANTRA_API_KEY', default=''),
    'CLIENT_ID': config('MYSMSMANTRA_CLIENT_ID', default=''),
    'SENDER_ID': config('MYSMSMANTRA_SENDER_ID', default='DBITMS'),
}

LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/dashboard/'
LOGOUT_REDIRECT_URL = '/login/'
SESSION_ENGINE = 'django.contrib.sessions.backends.db'

# Celery (optional) - set broker in env when using Celery
CELERY_BROKER_URL = config('CELERY_BROKER_URL', default='redis://localhost:6379/0')
CELERY_RESULT_BACKEND = config('CELERY_RESULT_BACKEND', default=CELERY_BROKER_URL)

# Email (local dev defaults - in prod set proper SMTP env vars)
EMAIL_BACKEND = config('EMAIL_BACKEND', default='django.core.mail.backends.console.EmailBackend')
EMAIL_DEFAULT_FROM = config('EMAIL_DEFAULT_FROM', default='no-reply@sms-portal.local')

# Logging - basic config for development & production awareness
LOG_LEVEL = config('LOG_LEVEL', default='INFO')

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'brief': {'format': '[{levelname}] {message}', 'style': '{'},
        'detailed': {'format': '{asctime} [{levelname}] {name}:{lineno} {message}', 'style': '{'},
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'detailed',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': LOG_LEVEL,
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': LOG_LEVEL,
            'propagate': False,
        },
        # app specific logger
        'sms': {
            'handlers': ['console'],
            'level': LOG_LEVEL,
            'propagate': False,
        },
    },
}

# Security tips (change in production)
SESSION_COOKIE_SECURE = config('SESSION_COOKIE_SECURE', default=False, cast=bool)
CSRF_COOKIE_SECURE = config('CSRF_COOKIE_SECURE', default=False, cast=bool)
SECURE_SSL_REDIRECT = config('SECURE_SSL_REDIRECT', default=False, cast=bool)

# Optional admin email notifications
ADMINS = tuple([tuple(map(str.strip, a.split(':'))) for a in config('ADMINS', default='').split(',') if a.strip()]) if config('ADMINS', default='') else []

# Useful dev/test helper
DEFAULT_FROM_EMAIL = EMAIL_DEFAULT_FROM

# Any custom settings you want to expose
APP_SETTINGS = {
    'DEFAULT_SMS_SENDER': config('DEFAULT_SMS_SENDER', default=MYSMSMANTRA_CONFIG.get('SENDER_ID', 'COLLGE')),
    'MAX_BATCH_SIZE': config('MAX_BATCH_SIZE', default=100, cast=int),
}

API_BASE = '/api'

# End of file
